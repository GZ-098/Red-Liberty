USA_congress_get_quorum = {
	set_variable = { var = quorum_low value = senators_total }
	multiply_variable = { var = quorum_low value = 0.4 }
	set_variable = { var = quorum_medium value = senators_total }
	multiply_variable = { var = quorum_medium value = 0.5 }
	set_variable = { var = quorum_high value = senators_total }
	multiply_variable = { var = quorum_high value = 0.6 }
	round_variable = quorum_low 
	round_variable = quorum_medium 
	round_variable = quorum_high
	
	set_variable = { var = rep_quorum_low value = representatives_total }
	multiply_variable = { var = rep_quorum_low value = 0.4 }
	set_variable = { var = rep_quorum_medium value = representatives_total }
	multiply_variable = { var = rep_quorum_medium value = 0.5 }
	set_variable = { var = rep_quorum_high value = representatives_total }
	multiply_variable = { var = rep_quorum_high value = 0.6 }
	round_variable = rep_quorum_low 
	round_variable = rep_quorum_medium
	round_variable = rep_quorum_high
	
	#USA_recalc_congress_icon_frames = yes
}

USA_congress_remove_state = {
	custom_effect_tooltip = mtg_usa_congress_remove_state_tt
	subtract_from_variable = { senators_total = 2 }
	clamp_variable = { var = senators_support max = senators_total min = 0 }
	USA_congress_get_quorum = yes
}

USA_congress_add_state = {
	custom_effect_tooltip = mtg_usa_congress_add_state_tt
	add_to_variable = { senators_total = 2 }
	add_to_variable = { senators_support = 2 }
	USA_congress_get_quorum = yes
}

USA_debug_example_setup = { # example debug act
	log = "[GetDateText]: [Root.GetName]: bill setup active"
	
	set_variable = { bill_id = 1 } # EACH BILL MUST HAVE A UNIQUE ID
	
	set_country_flag = USA_republican_discussing # Sets up who you can negotiate with
	set_country_flag = USA_democrat_discussing
	set_country_flag = USA_communist_discussing
	set_country_flag = USA_socialist_discussing
	set_country_flag = USA_fascist_discussing
	
	set_country_flag = bill_enable_mission # Gives the President penalties if they drag their feet for too long doing this
	set_variable = { USA_bill_mission_deadline = 150 }
	
	set_variable = { USA_republican_bill_support = 0.7 } # percentage of congresspeople who will initially support the bill
	set_variable = { USA_democrat_bill_support = 0.3 }
	set_variable = { USA_communist_bill_support = 1 }
	set_variable = { USA_socialist_bill_support = 1 }
	set_variable = { USA_fascist_bill_support = 0 }
	
	#set_country_flag = USA_special_decisions_enabled # hides generic decisions in favor of special ones
	
	set_variable = { average_boost_republican = 0.3 } # this shows the percentage of politicians (who are not currently supportive) who would be on average would be flipped by a compromise
	set_variable = { average_boost_democrat = 0.2 }
	set_variable = { average_boost_communist = 0.2 }
	set_variable = { average_boost_socialist = 0.2 }
	set_variable = { average_boost_fascist = 0.2 }
	
	set_variable = { republican_flip_cost = 25 } # how much pp negotiation decisions cost
	set_variable = { democrat_flip_cost = 40 }
	set_variable = { communist_flip_cost = 20 }
	set_variable = { socialist_flip_cost = 20 }
	set_variable = { fascist_flip_cost = 70 }
	
	USA_bill_setup = yes # always required
}

USA_social_security_act_setup = { # social security act
	log = "[GetDateText]: [Root.GetName]: bill setup active"
	
	set_variable = { bill_id = 2 } # EACH BILL MUST HAVE A UNIQUE ID
	
	set_country_flag = USA_republican_discussing # Sets up who you can negotiate with
	set_country_flag = USA_democrat_discussing
	set_country_flag = USA_communist_discussing
	set_country_flag = USA_socialist_discussing
	#set_country_flag = USA_fascist_discussing
	
	set_country_flag = bill_enable_mission # Gives the President penalties if they drag their feet for too long doing this
	set_variable = { USA_bill_mission_deadline = 45 }
	
	set_variable = { USA_republican_bill_support = 0.15 } # free market reeeeeee
	set_variable = { USA_democrat_bill_support = 0.35 } # liberals are supportive, conservatives not so much
	set_variable = { USA_communist_bill_support = 1 } # yes, more socialism
	set_variable = { USA_socialist_bill_support = 1 } # i mean, its our bill so
	set_variable = { USA_fascist_bill_support = 0.1 } # longists are supportive
	
	#set_country_flag = USA_special_decisions_enabled # hides generic decisions in favor of special ones
	
	set_variable = { average_boost_republican = 0.3 }
	set_variable = { average_boost_democrat = 0.2 }
	
	set_variable = { republican_flip_cost = 25 } # how much pp negotiation decisions cost
	set_variable = { democrat_flip_cost = 40 }
	set_variable = { communist_flip_cost = 20 }
	set_variable = { socialist_flip_cost = 20 }
	set_variable = { fascist_flip_cost = 70 }
	
	if = {
		limit = {
			has_country_flag = USA_tax_abandoned
		}
		add_to_variable = { USA_republican_bill_support = 0.05 }
		add_to_variable = { USA_democrat_bill_support = 0.05 }
	}
	
	USA_bill_setup = yes # always required
}

USA_farm_tenant_act_setup = { # farm tenant act
	log = "[GetDateText]: [Root.GetName]: bill setup active"
	
	set_variable = { bill_id = 3 } # EACH BILL MUST HAVE A UNIQUE ID
	
	set_country_flag = USA_republican_discussing
	set_country_flag = USA_democrat_discussing
	set_country_flag = USA_communist_discussing
	set_country_flag = USA_socialist_discussing
	set_country_flag = USA_fascist_discussing
	
	set_country_flag = bill_enable_mission
	set_variable = { USA_bill_mission_deadline = 60 }
	
	set_variable = { USA_republican_bill_support = 0.3 } # help the farmers, but hnng more spending
	set_variable = { USA_democrat_bill_support = 0.55 } # help the farmers
	set_variable = { USA_communist_bill_support = 1 } # help the farmers
	set_variable = { USA_socialist_bill_support = 1 } # help the farmers
	set_variable = { USA_fascist_bill_support = 0.1 }
	
	set_variable = { average_boost_republican = 0.3 }
	set_variable = { average_boost_democrat = 0.2 }
	
	set_variable = { republican_flip_cost = 20 }
	set_variable = { democrat_flip_cost = 30 }
	set_variable = { communist_flip_cost = 20 }
	set_variable = { socialist_flip_cost = 10 }
	set_variable = { fascist_flip_cost = 100 }
	
	USA_bill_setup = yes # always required
}

USA_judicial_reform_act_setup = { # court packing plan
	log = "[GetDateText]: [Root.GetName]: bill setup active"
	
	set_variable = { bill_id = 4 } # EACH BILL MUST HAVE A UNIQUE ID
	
	set_country_flag = USA_democrat_discussing
	set_country_flag = USA_communist_discussing
	set_country_flag = USA_socialist_discussing
	
	set_country_flag = bill_enable_mission
	set_variable = { USA_bill_mission_deadline = 60 }
	
	set_variable = { USA_republican_bill_support = 0.1 } # GOVERNMENT OVERREACH
	set_variable = { USA_democrat_bill_support = 0.15 } # DICTATORSHIP ALERT
	set_variable = { USA_communist_bill_support = 1 } # DESTROY CAPITALIST INSTITUTIONS
	set_variable = { USA_socialist_bill_support = 0.75 } # arent we going a bit far?
	set_variable = { USA_fascist_bill_support = 0 } # FACKING COMMIES RUINING MURICA
	
	set_variable = { average_boost_democrat = 0.15 }
	set_variable = { average_boost_socialist = 0.3 }
	
	set_variable = { democrat_flip_cost = 100 }
	set_variable = { socialist_flip_cost = 50 }
	
	if = {
		limit = {
			has_country_flag = USA_judicial_reform_consulting
		}
		add_to_variable = { USA_republican_bill_support = 0.05 }
		add_to_variable = { USA_democrat_bill_support = 0.05 }
	}
	
	if = {
		limit = {
			has_country_flag = USA_added_judicial_review_section_lite
		}
		subtract_from_variable = { USA_republican_bill_support = 0.02 }
		subtract_from_variable = { USA_democrat_bill_support = 0.02 }
	}
	
	if = {
		limit = {
			has_country_flag = USA_added_judicial_review_section
		}
		subtract_from_variable = { USA_republican_bill_support = 0.05 }
		subtract_from_variable = { USA_democrat_bill_support = 0.05 }
	}
	
	USA_bill_setup = yes # always required
}

USA_reorganization_act_setup = { # reorganization act
	log = "[GetDateText]: [Root.GetName]: bill setup active"
	
	set_variable = { bill_id = 5 } # EACH BILL MUST HAVE A UNIQUE ID
	
	set_country_flag = bill_enable_mission
	set_variable = { USA_bill_mission_deadline = 60 }
	
	set_variable = { USA_republican_bill_support = 0.3 }
	set_variable = { USA_democrat_bill_support = 0.3 }
	set_variable = { USA_communist_bill_support = 1 }
	set_variable = { USA_socialist_bill_support = 0.8 }
	set_variable = { USA_fascist_bill_support = 0.05 }
	
	if = {
		limit = {
			has_country_flag = USA_abandoned_court_packing_plan
		}
		add_to_variable = { USA_republican_bill_support = 0.1 }
		add_to_variable = { USA_democrat_bill_support = 0.1 }
	}
	
	set_variable = { republican_flip_cost = 50 }
	set_variable = { democrat_flip_cost = 70 }
	set_variable = { communist_flip_cost = 40 }
	set_variable = { socialist_flip_cost = 35 }
	set_variable = { fascist_flip_cost = 150 }
	
	USA_bill_setup = yes # always required
}

USA_union_representation_act_setup = { # union rep act
	log = "[GetDateText]: [Root.GetName]: bill setup active"
	
	set_variable = { bill_id = 6 } # EACH BILL MUST HAVE A UNIQUE ID
	
	set_country_flag = USA_democrat_discussing
	set_country_flag - USA_republican_discussing
	set_country_flag = USA_communist_discussing
	set_country_flag = USA_socialist_discussing
	
	set_country_flag = bill_enable_mission
	set_variable = { USA_bill_mission_deadline = 60 }
	
	set_variable = { USA_republican_bill_support = 0.15 }
	set_variable = { USA_democrat_bill_support = 0.25 }
	set_variable = { USA_communist_bill_support = 1 }
	set_variable = { USA_socialist_bill_support = 0.9 }
	set_variable = { USA_fascist_bill_support = 0.05 }
	
	set_variable = { republican_flip_cost = 100 }
	set_variable = { democrat_flip_cost = 100 }
	set_variable = { communist_flip_cost = 40 }
	set_variable = { socialist_flip_cost = 50 }
	set_variable = { fascist_flip_cost = 150 }
	
	USA_bill_setup = yes # always required
}

USA_pension_act_setup = { # pension act
	log = "[GetDateText]: [Root.GetName]: bill setup active"
	
	set_variable = { bill_id = 7 } # EACH BILL MUST HAVE A UNIQUE ID
	
	set_country_flag = USA_republican_discussing
	set_country_flag = USA_democrat_discussing
	set_country_flag = USA_communist_discussing
	set_country_flag = USA_socialist_discussing
	
	set_country_flag = bill_enable_mission
	set_variable = { USA_bill_mission_deadline = 60 }
	
	set_variable = { USA_republican_bill_support = 0.35 }
	set_variable = { USA_democrat_bill_support = 0.45 }
	set_variable = { USA_communist_bill_support = 1 }
	set_variable = { USA_socialist_bill_support = 1 }
	set_variable = { USA_fascist_bill_support = 0.1 }
	
	USA_bill_setup = yes # always required
}

USA_housing_act_setup = { # housing act
	log = "[GetDateText]: [Root.GetName]: bill setup active"
	
	set_variable = { bill_id = 8 } # EACH BILL MUST HAVE A UNIQUE ID
	
	set_country_flag = USA_republican_discussing
	set_country_flag = USA_democrat_discussing
	set_country_flag = USA_communist_discussing
	set_country_flag = USA_socialist_discussing
	
	set_country_flag = bill_enable_mission
	set_variable = { USA_bill_mission_deadline = 60 }
	
	set_variable = { USA_republican_bill_support = 0.15 }
	set_variable = { USA_democrat_bill_support = 0.45 }
	set_variable = { USA_communist_bill_support = 1 }
	set_variable = { USA_socialist_bill_support = 1 }
	set_variable = { USA_fascist_bill_support = 0.15 }
	
	set_variable = { average_boost_republican = 0.3 }
	set_variable = { average_boost_democrat = 0.2 }
	
	set_variable = { republican_flip_cost = 40 }
	set_variable = { democrat_flip_cost = 60 }
	set_variable = { communist_flip_cost = 40 }
	set_variable = { socialist_flip_cost = 20 }
	set_variable = { fascist_flip_cost = 150 }
	
	USA_bill_setup = yes # always required
}

USA_wealth_tax_act_setup = { # wealth tax act
	log = "[GetDateText]: [Root.GetName]: bill setup active"
	
	set_variable = { bill_id = 9 } # EACH BILL MUST HAVE A UNIQUE ID
	
	set_country_flag = USA_republican_discussing
	set_country_flag = USA_democrat_discussing
	set_country_flag = USA_communist_discussing
	set_country_flag = USA_socialist_discussing
	set_country_flag = USA_fascist_discussing
	
	set_country_flag = bill_enable_mission
	set_variable = { USA_bill_mission_deadline = 75 }
	
	set_variable = { USA_republican_bill_support = 0 }
	set_variable = { USA_democrat_bill_support = 0.2 }
	set_variable = { USA_communist_bill_support = 1 }
	set_variable = { USA_socialist_bill_support = 1 }
	set_variable = { USA_fascist_bill_support = 0.2 } # longists like this idea
	
	USA_bill_setup = yes # always required
}

USA_bill_setup = {
	USA_initialize_bill_support = yes
}

USA_initialize_bill_support = {
	set_country_flag = USA_discussing_bill
	set_variable = { senators_support = 0 }
	
	set_variable = { republican_supporting_senators = senators_republican }
	set_variable = { democrat_supporting_senators =  senators_democrat }
	set_variable = { communist_supporting_senators = senators_communist }
	set_variable = { socialist_supporting_senators = senators_socialist }
	set_variable = { fascist_supporting_senators = senators_fascist }
	
	set_variable = { republican_supporting_reps = representatives_republican }
	set_variable = { democrat_supporting_reps = representatives_democrat }
	set_variable = { communist_supporting_reps = representatives_communist }
	set_variable = { socialist_supporting_reps = representatives_socialist }
	set_variable = { fascist_supporting_reps = representatives_fascist }
	
	multiply_variable = { republican_supporting_senators = USA_republican_bill_support }
	multiply_variable = { democrat_supporting_senators = USA_democrat_bill_support }
	multiply_variable = { communist_supporting_senators = USA_communist_bill_support }
	multiply_variable = { socialist_supporting_senators = USA_socialist_bill_support }
	multiply_variable = { fascist_supporting_senators = USA_fascist_bill_support }
	
	multiply_variable = { republican_supporting_reps = USA_republican_bill_support }
	multiply_variable = { democrat_supporting_reps = USA_democrat_bill_support }
	multiply_variable = { communist_supporting_reps = USA_communist_bill_support }
	multiply_variable = { socialist_supporting_reps = USA_socialist_bill_support }
	multiply_variable = { fascist_supporting_reps = USA_fascist_bill_support }
	
	round_variable = republican_supporting_senators 
	round_variable = democrat_supporting_senators
	round_variable = communist_supporting_senators
	round_variable = socialist_supporting_senators
	round_variable = fascist_supporting_senators
	
	round_variable = republican_supporting_reps 
	round_variable = democrat_supporting_reps
	round_variable = communist_supporting_reps
	round_variable = socialist_supporting_reps
	round_variable = fascist_supporting_reps
	
	add_to_variable = { senators_support = republican_supporting_senators } 
	add_to_variable = { senators_support = democrat_supporting_senators }
	add_to_variable = { senators_support = communist_supporting_senators }
	add_to_variable = { senators_support = socialist_supporting_senators }
	add_to_variable = { senators_support = fascist_supporting_senators }
	
	add_to_variable = { representatives_support = republican_supporting_reps } 
	add_to_variable = { representatives_support = democrat_supporting_reps }
	add_to_variable = { representatives_support = communist_supporting_reps }
	add_to_variable = { representatives_support = socialist_supporting_reps }
	add_to_variable = { representatives_support = fascist_supporting_reps }
}

check_if_bill_passed = {
	set_variable = { percent_support = senators_support }
	divide_variable = { percent_support = senators_total }
	set_variable = { votes_needed = 0.5 }
	if = {
		limit = { has_country_flag = fillibuster_active }
		set_variable = { votes_needed = 0.6 }
	}

	if = {
		limit = {
			check_variable = {
				var = percent_support
				value = votes_needed
				compare = greater_than_or_equals
			}
		}
		set_country_flag = bill_passed
	}
}

USA_bill_clear = {
	clr_country_flag = USA_BILL_EVENTLESS_NEGOTIATION
	clr_country_flag = USA_discussing_bill
	
	clr_country_flag = USA_special_decisions_enabled
	
	clr_country_flag = USA_republican_discussing
	clr_country_flag = USA_democrat_discussing
	clr_country_flag = USA_communist_discussing
	clr_country_flag = USA_socialist_discussing
	clr_country_flag = USA_fascist_discussing
	
	set_variable = { bill_id = 0 }
	
	clear_variable = USA_bill_mission_deadline
	
	clear_variable = USA_republican_bill_support
	clear_variable = USA_democrat_bill_support
	clear_variable = USA_communist_bill_support
	clear_variable = USA_socialist_bill_support
	clear_variable = USA_fascist_bill_support
	
	clear_variable = average_boost_republican
	clear_variable = average_boost_democrat
	clear_variable = average_boost_communist
	clear_variable = average_boost_socialist
	clear_variable = average_boost_fascist
	
	clr_country_flag = republicans_negotiated
	clr_country_flag = democrats_negotiated
	clr_country_flag = communists_negotiated
	clr_country_flag = socialists_negotiated
	clr_country_flag = fascists_negotiated
	
	clear_variable = republican_supporting_senators
	clear_variable = democrat_supporting_senators
	clear_variable = communist_supporting_senators
	clear_variable = socialist_supporting_senators
	clear_variable = fascist_supporting_senators
	
	clear_variable = republican_supporting_reps
	clear_variable = democrat_supporting_reps
	clear_variable = communist_supporting_reps
	clear_variable = socialist_supporting_reps
	clear_variable = fascist_supporting_reps
	
	clear_variable = senators_support
	clear_variable = representatives_support
	
	clr_country_flag = bill_passed
	clr_country_flag = bill_enable_mission
}

USA_republican_support_eventless = {
	custom_effect_tooltip = negotiate_some_republican_support
	USA = {
		set_variable = { temp_senate_republican = senators_republican }
		set_variable = { temp_senate_already_supporting = republican_supporting_senators }
		
		subtract_from_variable = { temp_senate_republican = temp_senate_already_supporting }
		log = "[GetDateText]: [Root.GetName]: calculated non-supporting republicans: [?temp_senate_republican]"
		
		set_variable = { new_senate_support = temp_senate_republican }
		log = "[GetDateText]: [Root.GetName]: set republican senator support: [?new_senate_support]"
		
		multiply_variable = { new_senate_support = average_boost_republican }
		log = "[GetDateText]: [Root.GetName]: Senate - calculated new republican support: [?new_senate_support]"
		
		randomize_variable = {
			var = new_senate_support
			distribution = uniform
			min = 1
			max = 20
		}
						
		round_variable = new_senate_support
		log = "[GetDateText]: [Root.GetName]: rounded republican senator support: [?new_senate_support]"
		
		add_to_variable = { republican_supporting_senators = new_senate_support }
		clamp_variable = {
			var = republican_supporting_senators
			min = 0
			max = senators_republican
		}
		clamp_variable = {
			var = new_senate_support
			min = 0
			max = senators_republican
		}
		add_to_variable = { senators_support = new_senate_support }
		log = "[GetDateText]: [Root.GetName]: added republican senator support: [?new_senate_support]"
	}
	
	USA = {# representatives
		set_variable = { temp_house_republican = representatives_republican }
		set_variable = { temp_house_already_supporting = republican_supporting_reps }
		
		subtract_from_variable = { temp_house_republican = temp_house_already_supporting }
		log = "[GetDateText]: [Root.GetName]: calculated non-supporting republicans: [?temp_house_republican]"
	
		set_variable = { new_house_support = temp_house_republican }
		multiply_variable = { new_house_support = average_boost_republican }
		log = "[GetDateText]: [Root.GetName]: House - calculated new republican support: [?new_house_support]"
		
		randomize_variable = {
			var = new_house_support
			distribution = uniform
			min = 1
			max = 20
		}
		
		round_variable = new_house_support
		log = "[GetDateText]: [Root.GetName]: rounded republican representative support: [?new_house_support]"
		
		add_to_variable = { republican_supporting_reps = new_house_support }
		clamp_variable = {
			var = republican_supporting_reps
			min = 0
			max = representatives_republican
		}
		clamp_variable = {
			var = new_house_support
			min = 0
			max = representatives_republican
		}
		add_to_variable = { representatives_support = new_house_support }
		log = "[GetDateText]: [Root.GetName]: added republican house support: [?new_house_support]"
	}
	
	set_country_flag = republicans_negotiated
	clear_variable = { new_senate_support }
	clear_variable = { new_house_support }
}

USA_democrat_support_eventless = {
	custom_effect_tooltip = negotiate_some_democrat_support
	USA = {
		set_variable = { temp_senate_democrat = senators_democrat }
		set_variable = { temp_senate_already_supporting = democrat_supporting_senators }
		
		subtract_from_variable = { temp_senate_democrat = temp_senate_already_supporting }
		log = "[GetDateText]: [Root.GetName]: calculated non-supporting democrats: [?temp_senate_democrat]"
		
		set_variable = { new_senate_support = temp_senate_democrat }
		log = "[GetDateText]: [Root.GetName]: set democrat senator support: [?new_senate_support]"
		
		multiply_variable = { new_senate_support = average_boost_democrat }
		log = "[GetDateText]: [Root.GetName]: Senate - calculated new democrat support: [?new_senate_support]"
		
		randomize_variable = {
			var = new_senate_support
			distribution = uniform
			min = 1
			max = 20
		}
						
		round_variable = new_senate_support
		log = "[GetDateText]: [Root.GetName]: rounded democrat senator support: [?new_senate_support]"
		
		add_to_variable = { democrat_supporting_senators = new_senate_support }
		clamp_variable = {
			var = democrat_supporting_senators
			min = 0
			max = senators_democrat
		}
		clamp_variable = {
			var = new_senate_support
			min = 0
			max = senators_democrat
		}
		add_to_variable = { senators_support = new_senate_support }
		log = "[GetDateText]: [Root.GetName]: added democrat senator support: [?new_senate_support]"
	}
	
	USA = {# representatives
		set_variable = { temp_house_democrat = representatives_democrat }
		set_variable = { temp_house_already_supporting = democrat_supporting_reps }
		
		subtract_from_variable = { temp_house_democrat = temp_house_already_supporting }
		log = "[GetDateText]: [Root.GetName]: calculated non-supporting democrats: [?temp_house_democrat]"
	
		set_variable = { new_house_support = temp_house_democrat }
		multiply_variable = { new_house_support = average_boost_democrat }
		log = "[GetDateText]: [Root.GetName]: House - calculated new democrat support: [?new_house_support]"
		
		randomize_variable = {
			var = new_house_support
			distribution = uniform
			min = 1
			max = 20
		}
		
		round_variable = new_house_support
		log = "[GetDateText]: [Root.GetName]: rounded democrat representative support: [?new_house_support]"
		
		add_to_variable = { democrat_supporting_reps = new_house_support }
		clamp_variable = {
			var = democrat_supporting_reps
			min = 0
			max = representatives_democrat
		}
		clamp_variable = {
			var = new_house_support
			min = 0
			max = representatives_democrat
		}
		add_to_variable = { representatives_support = new_house_support }
		log = "[GetDateText]: [Root.GetName]: added democrat house support: [?new_house_support]"
	}
	
	set_country_flag = democrats_negotiated
	clear_variable = { new_senate_support }
	clear_variable = { new_house_support }
}

USA_socialist_biased_allocation = {
	set_variable = {
		representatives_socialist = party_popularity@libertarian_socialism
	}
	add_to_variable = {
		representatives_socialist = party_popularity@social_democracy
	}
	if = {
		limit = {
			has_country_flag = USA_gerrymandering_socialist
		}
		divide_variable = {
			representatives_wpa = 2
		}
	}
}

USA_recalc_house = { # this will recalculate the number of representatives based on party popularity, in an unbiased manner which does not favor any parties
	
	#Sets variable to check for discrepencies
	set_variable = {
		USA_old_representatives_total = representatives_total
	}
	
	set_variable = {
		representatives_communist = party_popularity@revolutionary_autocacy
	}
	
	set_variable = {
		representatives_socialist = party_popularity@libertarian_socialism
	}
	add_to_variable = {
		representatives_socialist = party_popularity@social_democracy
	}
	add_to_variable = {
		representatives_socialist = party_popularity@proletarian_dictatorship
	}
	
	set_variable = {
		representatives_republican = party_popularity@market_libertarianism
	}
	
	set_variable = {
		representatives_democrat = party_popularity@progressive_liberalism
	}
	add_to_variable = {
		representatives_democrat = party_popularity@national_conservatism
	}
	
	set_variable = {
		representatives_fascist = party_popularity@authoritarian_republicanism
	}
	add_to_variable = {
		representatives_fascist = party_popularity@ultranational_statism
	}
	
	#Gets seats
	multiply_variable = {
		representatives_communist = representatives_total
	}
	multiply_variable = {
		representatives_socialist = representatives_total
	}
	multiply_variable = {
		representatives_republican = representatives_total
	}
	multiply_variable = {
		representatives_democrat = representatives_total
	}
	multiply_variable = {
		representatives_fascist = representatives_total
	}
	
	#rounds
	round_variable = representatives_communist
	round_variable = representatives_socialist
	round_variable = representatives_republican
	round_variable = representatives_democrat
	round_variable = representatives_fascist
	
	#Gets new total seat value
	set_variable = {
		representatives_total = 0
	}
	add_to_variable = {
		representatives_total = representatives_communist
	}
	add_to_variable = {
		representatives_total = representatives_socialist
	}
	add_to_variable = {
		representatives_total = representatives_republican
	}
	add_to_variable = {
		representatives_total = representatives_democrat
	}
	add_to_variable = {
		representatives_total = representatives_fascist
	}
	
	#gets discrepency
	subtract_from_variable = {
		USA_old_representatives_total = representatives_total
	}
	
	#deals with discrepency, if needed
	if = {
		limit = {
			NOT = {
				check_variable = {
					USA_old_representatives_total = 0
				}
			}
		}
		add_to_variable = {
			representatives_total = USA_old_representatives_total
		}
		if = {
			limit = {
				has_government = proletarian_dictatorship
			}
			add_to_variable = {
				representatives_communist = USA_old_representatives_total
			}
		}
		else_if = {
			limit = {
				has_government = libertarian_socialism
			}
			add_to_variable = {
				representatives_socialist = USA_old_representatives_total
			}
		}
		else_if = {
			limit = {
				has_government = progressive_liberalism
			}
			add_to_variable = {
				representatives_republican = USA_old_representatives_total
			}
		}
		else_if = {
			limit = {
				has_government = national_conservatism
			}
			add_to_variable = {
				representatives_democrat = USA_old_representatives_total
			}
		}
		else_if = {
			limit = {
				has_government = authoritarian_republicanism
			}
			add_to_variable = {
				representatives_fascist = USA_old_representatives_total
			}
		}
	}
}

USA_recalc_house_biased = { # this will recalculate the number of representatives based on party popularity, with a bias towards certain parties
	
	#Sets variable to check for discrepencies
	set_variable = {
		USA_old_representatives_total = representatives_total
	}
	
	# cpusa gets a fourth of the seats it deserves
	set_variable = {
		representatives_communist = party_popularity@revolutionary_autocacy
	}
	add_to_variable = {
		representatives_communist = party_popularity@proletarian_dictatorship
	}
	divide_variable = {
		representatives_communist = 4
	}
	
	# spa gets three/fourths of the seats it deserves
	set_variable = {
		representatives_socialist = party_popularity@libertarian_socialism
	}
	add_to_variable = {
		representatives_socialist = party_popularity@social_democracy
	}
	divide_variable = {
		representatives_socialist = 1.25
	}
	
	set_variable = {
		representatives_republican = party_popularity@progressive_liberalism
	}
	add_to_variable = {
		representatives_republican = party_popularity@market_libertarianism
	}
	
	set_variable = {
		representatives_democrat = party_popularity@national_conservatism
	}
	
	# afp gets half of the seats it deserves
	set_variable = {
		representatives_fascist = party_popularity@authoritarian_republicanism
	}
	add_to_variable = {
		representatives_fascist = party_popularity@ultranational_statism
	}
	divide_variable = {
		representatives_fascist = 2
	}
	
	#Gets seats
	multiply_variable = {
		representatives_communist = representatives_total
	}
	multiply_variable = {
		representatives_socialist = representatives_total
	}
	multiply_variable = {
		representatives_republican = representatives_total
	}
	multiply_variable = {
		representatives_democrat = representatives_total
	}
	multiply_variable = {
		representatives_fascist = representatives_total
	}
	
	#rounds
	round_variable = representatives_communist
	round_variable = representatives_socialist
	round_variable = representatives_republican
	round_variable = representatives_democrat
	round_variable = representatives_fascist
	
	#Gets new total seat value
	set_variable = {
		representatives_total = 0
	}
	add_to_variable = {
		representatives_total = representatives_communist
	}
	add_to_variable = {
		representatives_total = representatives_socialist
	}
	add_to_variable = {
		representatives_total = representatives_republican
	}
	add_to_variable = {
		representatives_total = representatives_democrat
	}
	add_to_variable = {
		representatives_total = representatives_fascist
	}
	
	#gets discrepency
	subtract_from_variable = {
		USA_old_representatives_total = representatives_total
	}
	
	#deals with discrepency, if needed
	if = {
		limit = {
			NOT = {
				check_variable = {
					USA_old_representatives_total = 0
				}
			}
		}
		set_variable = {
			USA_partial_discrepency = USA_old_representatives_total
		}
		multiply_variable = {
			USA_partial_discrepency = 0.6 #goes to tories
		}
		round_variable = USA_partial_discrepency
		if = {
			limit = {
				check_variable = {
					USA_partial_discrepency > 0 #positive
				}
			}
			subtract_from_variable = {
				USA_old_representatives_total = USA_partial_discrepency #remainder will be given to dems
			}
			add_to_variable = {
				representatives_democrat = USA_partial_discrepency
			}
			add_to_variable = {
				representatives_republican = USA_old_representatives_total
			}
		}
		
		#change to subtract, if it does not change behavior, the problem is here
		else = { #negative discrepency, somehow too many seats
			subtract_from_variable = {
				USA_old_representatives_total = USA_partial_discrepency #remainder will be taken from reps
			}
			add_to_variable = {
				representatives_democrat = USA_old_representatives_total
			}
			add_to_variable = {
				representatives_republican = USA_partial_discrepency
			}
		}
	}
	
	#Gets new total seat value, again
	set_variable = {
		representatives_total = 0
	}
	add_to_variable = {
		representatives_total = representatives_communist
	}
	add_to_variable = {
		representatives_total = representatives_socialist
	}
	add_to_variable = {
		representatives_total = representatives_republican
	}
	add_to_variable = {
		representatives_total = representatives_democrat
	}
	add_to_variable = {
		representatives_total = representatives_fascist
	}
}

USA_bill_vote = {
	if = {
		limit = {
			check_variable = { bill_id = 1 } # debug act
		}
		country_event = {
			id = us_bill.1
			hours = 1
		}
	}
	else_if = {
		limit = {
			check_variable = { bill_id = 2 } # social security act
		}
		country_event = {
			id = us_bill.2
			hours = 1
		}
	}
	else_if = {
		limit = {
			check_variable = { bill_id = 3 } # farm tenant act
		}
		country_event = {
			id = us_bill.3
			hours = 1
		}
	}
	else_if = {
		limit = {
			check_variable = { bill_id = 4 } # 
		}
		country_event = {
			id = us_bill.4
			hours = 1
		}
	}
	else_if = {
		limit = {
			check_variable = { bill_id = 5 } # 
		}
		country_event = {
			id = us_bill.5
			hours = 1
		}
	}
	else_if = {
		limit = {
			check_variable = { bill_id = 6 } # 
		}
		country_event = {
			id = us_bill.6
			hours = 1
		}
	}
	else_if = {
		limit = {
			check_variable = { bill_id = 7 } # pension act
		}
		country_event = {
			id = us_bill.7
			hours = 1
		}
	}
	else_if = {
		limit = {
			check_variable = { bill_id = 8 } # housing act
		}
		country_event = {
			id = us_bill.8
			hours = 1
		}
	}
	else_if = {
		limit = {
			check_variable = { bill_id = 9 } # wealth tax act
		}
		country_event = {
			id = us_bill.9
			hours = 1
		}
	}
}
